DROP TABLE BookingDetail;

DROP TABLE StaffSchedule;
DROP TABLE FlightEvent;
DROP TABLE FlightRoute;
DROP TABLE FlightSchedule;

DROP TABLE PartReplacement;
DROP TABLE AirplaneMaintenance;
DROP TABLE AirplaneDisposal;
DROP TABLE Seat;

DROP TABLE Purchase;
DROP TABLE Leave;

DROP TABLE Refund;
DROP TABLE Cancellation;
DROP TABLE Payment;
DROP TABLE Booking;
DROP TABLE InsuranceClaim;
DROP TABLE Policy;
DROP TABLE Insurance;


DROP TABLE CheckingLuggage;
DROP TABLE Staff;
DROP TABLE Item;
DROP TABLE Airplane;
DROP TABLE Airport;
DROP TABLE Passenger;
DROP TABLE Member;

CREATE TABLE Member (
  MemberID 		VARCHAR(5) 	NOT NULL,
  MemberName 		VARCHAR(50) 	NOT NULL,
  MemberGender		VARCHAR(1)	NOT NULL,
  MemberIC 		VARCHAR(12) 	NOT NULL UNIQUE,
  MemberEmail 		VARCHAR(50) 	NOT NULL UNIQUE,
  MemberPhone 		VARCHAR(11) 	NOT NULL,
  LoginPassword 	VARCHAR(20) 	NOT NULL,
  BankAccountNumber 	VARCHAR(10) 	NOT NULL,
  PRIMARY KEY (MemberID)
);

CREATE TABLE Passenger (
  PassengerID 		VARCHAR(5) 	NOT NULL,
  PassengerType 	VARCHAR(5) 	NOT NULL,
  PassengerName 	VARCHAR(50) 	NOT NULL,
  PassengerGender 	VARCHAR(1) 	NOT NULL,
  PassengerIC 		VARCHAR(12) 	NOT NULL UNIQUE,
  PRIMARY KEY (PassengerID)
);

CREATE TABLE Airport (
  AirportID 		VARCHAR(5) 	NOT NULL,
  AirportName 		VARCHAR(200) 	NOT NULL,
  Location 		VARCHAR(50) 	NOT NULL,
  Country 		VARCHAR(60) 	NOT NULL,
  PRIMARY KEY (AirportID) 
);

CREATE TABLE Airplane (
  AirplaneID 		VARCHAR(6) 	NOT NULL,
  TailNumber 		VARCHAR(6) 	NOT NULL UNIQUE,
  Model 		VARCHAR(50) 	NOT NULL,
  Manufacturer 		VARCHAR(50) 	NOT NULL,
  DateOfManufacture 	DATE 		NOT NULL,
  TotalFlightHours 	NUMBER(6) 	NOT NULL,
  CurrentStatus 	VARCHAR(20),
  PurchasePrice 	NUMBER(9),
  AirportID 		VARCHAR(5)	NOT NULL,
  FOREIGN KEY (AirportID) REFERENCES Airport(AirportID),
  PRIMARY KEY (AirplaneID)
);

CREATE TABLE Item (
  ItemID 		VARCHAR(5) 	NOT NULL,
  ItemPrice 		NUMBER(6,2) 	NOT NULL,
  ItemName 		VARCHAR(30) 	NOT NULL,
  Category 		VARCHAR(50) 	NOT NULL,
  QuantityInStock 	NUMBER(5) 	NOT NULL,
  SellingPrice 	NUMBER(6,2) 	NOT NULL,
  PRIMARY KEY (ItemID)
);

CREATE TABLE Staff (
  StaffID 		VARCHAR(5) 	NOT NULL,
  StaffName 		VARCHAR(50) 	NOT NULL,
  StaffPosition 	VARCHAR(50) 	NOT NULL,
  StaffIC 		VARCHAR(12) 	NOT NULL UNIQUE,
  WeeklyWorkingHours NUMBER(2) 	NOT NULL,
  PRIMARY KEY (StaffID)
);

CREATE TABLE CheckingLuggage (
  LuggageID 		VARCHAR(5) 	NOT NULL,
  Type 			VARCHAR(15) 	NOT NULL,
  Weight 		NUMBER(4,2) 	NOT NULL,
  Status 		VARCHAR(15) 	NOT NULL,
  ExtraFee 		NUMBER(6,2),
  CheckLuggageID 	VARCHAR(6) 	NOT NULL,
  PRIMARY KEY (LuggageID)
);

CREATE TABLE Insurance (
  InsuranceID 		VARCHAR(7) 	NOT NULL,
  InsuranceName 	VARCHAR(30) 	NOT NULL,
  InsuranceDetails 	VARCHAR(200),
  InsurancePrice 	NUMBER(7,2) 	NOT NULL,
  PRIMARY KEY (InsuranceID)
);

CREATE TABLE Policy (
  PolicyID 		VARCHAR(7) 	NOT NULL,
  PurchaseStatus 	VARCHAR(15) 	NOT NULL,
  InsuranceID 		VARCHAR(7),
  PRIMARY KEY (PolicyID),
  FOREIGN KEY (InsuranceID) REFERENCES Insurance(InsuranceID)
);

CREATE TABLE InsuranceClaim (
  ClaimID 		VARCHAR(6) 	NOT NULL,
  ClaimDate 		DATE 		NOT NULL,
  ClaimAmount 		NUMBER(8,2),
  ClaimStatus 		VARCHAR(15),
  PolicyID 		VARCHAR(7),
  PRIMARY KEY (ClaimID),
  FOREIGN KEY (PolicyID) REFERENCES Policy(PolicyID)
);

CREATE TABLE Booking (
  BookingID 		VARCHAR(5) 	NOT NULL,
  BookingDate 		DATE 		NOT NULL,
  NoOfPassenger 	NUMBER(3) 	NOT NULL,
  DepartDate 		DATE,
  ReturnDate 		DATE,
  BookingStatus 	VARCHAR(15) 	NOT NULL,
  MemberID 		VARCHAR(5) 	NOT NULL,
  PolicyID 		VARCHAR(7) 	NOT NULL,
  PRIMARY KEY (BookingID),
  FOREIGN KEY (MemberID) REFERENCES Member(MemberID),
  FOREIGN KEY (PolicyID) REFERENCES Policy(PolicyID)
);

CREATE TABLE Payment (
  PaymentID 		VARCHAR(7) 	NOT NULL,
  PaymentDate 		TIMESTAMP 	NOT NULL,
  PaymentAmount 	NUMBER(7,2) 	NOT NULL,
  PaymentMethod 	VARCHAR(20) 	NOT NULL,
  BookingID 		VARCHAR(5) 	NOT NULL,
  PRIMARY KEY (PaymentID),
  FOREIGN KEY (BookingID) REFERENCES Booking(BookingID)
);

CREATE TABLE Cancellation (
  CancellationID 	VARCHAR(7) 	NOT NULL,
  CancellationDate 	TIMESTAMP 	NOT NULL,
  BookingID 		VARCHAR(5),
  PRIMARY KEY (CancellationID),
  FOREIGN KEY (BookingID) REFERENCES Booking(BookingID)
);

CREATE TABLE Refund (
  RefundID 		VARCHAR(7) 	NOT NULL,
  RefundDate 		TIMESTAMP 	NOT NULL,
  RefundAmount 		NUMBER(7,2) 	NOT NULL,
  CancellationID 	VARCHAR(7) 	NOT NULL,
  PRIMARY KEY (RefundID),
  FOREIGN KEY (CancellationID) REFERENCES Cancellation(CancellationID)
);

CREATE TABLE Leave (
  LeaveID 		VARCHAR(7) 	NOT NULL,
  LeaveDate 		DATE 		NOT NULL,
  LeaveReason		VARCHAR(200),
  LeaveStatus		VARCHAR(20)	NOT NULL,
  StaffID 		VARCHAR(5),
  PRIMARY KEY (LeaveID),
  FOREIGN KEY (StaffID) REFERENCES Staff(StaffID)
);

CREATE TABLE Purchase (
  PassengerID 		VARCHAR(5) 	NOT NULL,
  ItemID 		VARCHAR(5) 	NOT NULL,
  TotalPrice 		NUMBER(8,2) 	NOT NULL,
  Quantity 		NUMBER(2) 	NOT NULL,
  ItemBuyPrice 		NUMBER(6,2) 	NOT NULL,
  PurchaseDate 		DATE 	NOT NULL,
  PRIMARY KEY (PassengerID, ItemID),
  FOREIGN KEY (PassengerID) REFERENCES Passenger(PassengerID),
  FOREIGN KEY (ItemID) REFERENCES Item(ItemID)
);

CREATE TABLE Seat (
  SeatID 		VARCHAR(9) 	NOT NULL,
  Label 		VARCHAR(4) 	NOT NULL,
  TravelClass 		VARCHAR(24) 	NOT NULL,
  AirplaneID 		VARCHAR(6) 	NOT NULL,
  PRIMARY KEY (SeatID),
  FOREIGN KEY (AirplaneID) REFERENCES Airplane(AirplaneID)
);

CREATE TABLE AirplaneDisposal (
  DisposalID 		VARCHAR(6) 	NOT NULL,
  DisposalDate 		DATE 		NOT NULL,
  DisposalReason 	VARCHAR(200),
  DisposalMethod 	VARCHAR(20), 
  DisposalPrice 	NUMBER(11,2),
  AirplaneID 		VARCHAR(6) 	NOT NULL,
  PRIMARY KEY (DisposalID),
  FOREIGN KEY (AirplaneID) REFERENCES Airplane(AirplaneID)
);

CREATE TABLE AirplaneMaintenance (
  MaintenanceID 	VARCHAR(7) 	NOT NULL,
  MaintenanceType 	VARCHAR(20) 	NOT NULL,
  MaintenanceDateTime 	TIMESTAMP 	NOT NULL,
  HoursWork 		NUMBER(2) 	NOT NULL,
  Description 		VARCHAR(200),
  MaintenanceStatus 	VARCHAR(15) 	NOT NULL,
  NextMaintenanceDate 	DATE,
  AirplaneID 		VARCHAR(6) 	NOT NULL,
  PRIMARY KEY (MaintenanceID),
  FOREIGN KEY (AirplaneID) REFERENCES Airplane(AirplaneID)
);

CREATE TABLE PartReplacement (
  PartReplacementID 	VARCHAR(6) 	NOT NULL,
  PartName 		VARCHAR(50) 	NOT NULL,
  PartModel 		VARCHAR(100),
  ReplacementReason 	VARCHAR(200),
  MaintenanceID 	VARCHAR(7) 	NOT NULL,
  PRIMARY KEY (PartReplacementID),
  FOREIGN KEY (MaintenanceID) REFERENCES AirplaneMaintenance(MaintenanceID)
);

CREATE TABLE FlightSchedule (
  FlightScheduleID 	VARCHAR(6) 	NOT NULL,
  DepartureDateTime 	TIMESTAMP 	NOT NULL,
  ArrivalDateTime 	TIMESTAMP 	NOT NULL,
  AdultPrice		NUMBER(11,2)	NOT NULL,
  ChildPrice		NUMBER(11,2)	NOT NULL,
  AirplaneID 		VARCHAR(6) 	NOT NULL,
  PRIMARY KEY (FlightScheduleID),
  FOREIGN KEY (AirplaneID) REFERENCES Airplane(AirplaneID)
);

CREATE TABLE FlightRoute (
  FlightScheduleID 	VARCHAR(6) 	NOT NULL,
  AirportID 		VARCHAR(5) 	NOT NULL,
  PRIMARY KEY (FlightScheduleID, AirportID),
  FOREIGN KEY (FlightScheduleID) REFERENCES FlightSchedule(FlightScheduleID),
  FOREIGN KEY (AirportID) REFERENCES Airport(AirportID)
);


CREATE TABLE FlightEvent (
  EventID 		VARCHAR(6) 	NOT NULL,
  StatusType 		VARCHAR(20) 	NOT NULL,
  EventDetail 		VARCHAR(255),
  EventTimestamp 	TIMESTAMP,
  DelayDuration 	NUMBER(4),
  FlightScheduleID 	VARCHAR(6) 	NOT NULL,
  PRIMARY KEY (EventID),
  FOREIGN KEY (FlightScheduleID) REFERENCES FlightSchedule(FlightScheduleID)
);


CREATE TABLE StaffSchedule (
  StaffID 		VARCHAR(5) 	NOT NULL,
  FlightScheduleID 	VARCHAR(6) 	NOT NULL,
  CheckIn 		TIMESTAMP,
  CheckOut 		TIMESTAMP,
  WorkingHours 		NUMBER(2),
  PRIMARY KEY (StaffID, FlightScheduleID),
  FOREIGN KEY (StaffID) REFERENCES Staff(StaffID),
  FOREIGN KEY (FlightScheduleID) REFERENCES FlightSchedule(FlightScheduleID)
);

CREATE TABLE BookingDetail (
  BookingID 		VARCHAR(5) 	NOT NULL,
  PassengerID 		VARCHAR(5) 	NOT NULL,
  WayID 		NUMBER(1) 	NOT NULL,
  FlightScheduleID 	VARCHAR(6) 	NOT NULL,
  SeatID 		VARCHAR(9) 	NOT NULL,
  CheckLuggageID 	VARCHAR(6) 	NOT NULL,
  PRIMARY KEY (BookingID, PassengerID, WayID),
  FOREIGN KEY (BookingID) REFERENCES Booking(BookingID),
  FOREIGN KEY (PassengerID) REFERENCES Passenger(PassengerID),
  FOREIGN KEY (FlightScheduleID) REFERENCES FlightSchedule(FlightScheduleID),
  FOREIGN KEY (SeatID) REFERENCES Seat(SeatID)
);
